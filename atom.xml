<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>韶 光</title>
  <icon>http://blog.xyang.xin/icon.png</icon>
  <subtitle>Yang Xinyu&#39;s Personal Blog</subtitle>
  <link href="http://blog.xyang.xin/atom.xml" rel="self"/>
  
  <link href="http://blog.xyang.xin/"/>
  <updated>2021-09-02T12:29:08.490Z</updated>
  <id>http://blog.xyang.xin/</id>
  
  <author>
    <name>杨欣雨</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hubot 官方文档</title>
    <link href="http://blog.xyang.xin/hubot-document/"/>
    <id>http://blog.xyang.xin/hubot-document/</id>
    <published>2021-09-02T20:27:46.000Z</published>
    <updated>2021-09-02T12:29:08.490Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Hubot-官方文档&quot;&gt;&lt;a href=&quot;#Hubot-官方文档&quot; class=&quot;headerlink&quot; title=&quot;Hubot 官方文档&quot;&gt;&lt;/a&gt;Hubot 官方文档&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://hubot.github.com/docs/&quot;&gt;原文链接🔗&lt;/a&gt;&lt;br&gt;&lt;img data-src=&quot;https://images.xyang.xin/2021%2F09%2F01%2Fhubot-avatar.png&quot; alt=&quot;hubot-avatar.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;概览&quot;&gt;&lt;a href=&quot;#概览&quot; class=&quot;headerlink&quot; title=&quot;概览&quot;&gt;&lt;/a&gt;概览&lt;/h2&gt;&lt;h3 id=&quot;Hubot-起步&quot;&gt;&lt;a href=&quot;#Hubot-起步&quot; class=&quot;headerlink&quot; title=&quot;Hubot 起步&quot;&gt;&lt;/a&gt;Hubot 起步&lt;/h3&gt;&lt;p&gt;你需要&lt;a href=&quot;https://docs.npmjs.com/getting-started/installing-node&quot;&gt;node.js和npm&lt;/a&gt;。安装它们后，我们就可以安装 hubot 生成器：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; npm install -g yo generator-hubot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这条命令将给我们带来hubot &lt;a href=&quot;http://yeoman.io/&quot;&gt;yeoman&lt;/a&gt;生成器。现在我们就可以先创建一个的文件夹，然后在里面生成一个新的hubot实例。例如，如果我们想制造一个叫 myhubot的🤖️：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; mkdir myhubot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; myhubot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; yo hubot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="hubot" scheme="http://blog.xyang.xin/tags/hubot/"/>
    
    <category term="chatops" scheme="http://blog.xyang.xin/tags/chatops/"/>
    
  </entry>
  
  <entry>
    <title>环形链表</title>
    <link href="http://blog.xyang.xin/leetcode-142/"/>
    <id>http://blog.xyang.xin/leetcode-142/</id>
    <published>2020-09-13T11:50:24.000Z</published>
    <updated>2021-08-22T09:47:12.258Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/linked-list-cycle-ii/&quot;&gt;142. 环形链表 II - 力扣（LeetCode）&lt;/a&gt;&lt;br&gt;给定一个链表，返回链表入环的第一个节点。无环返回null。&lt;br&gt;&lt;img data-src=&quot;https://images.xyang.xin/2020%2F09%2F13%2FlinkList.jpg?x-oss-process=style/title_800&quot; alt=&quot;linkList.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="leecode" scheme="http://blog.xyang.xin/tags/leecode/"/>
    
    <category term="链表" scheme="http://blog.xyang.xin/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>学习 HTTP 协议笔记</title>
    <link href="http://blog.xyang.xin/learn-http-basics/"/>
    <id>http://blog.xyang.xin/learn-http-basics/</id>
    <published>2020-09-03T16:04:17.000Z</published>
    <updated>2021-08-22T09:12:42.507Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;网络模型&quot;&gt;&lt;a href=&quot;#网络模型&quot; class=&quot;headerlink&quot; title=&quot;网络模型&quot;&gt;&lt;/a&gt;网络模型&lt;/h2&gt;&lt;p&gt;五层网络模型：&lt;br&gt;&lt;img data-src=&quot;https://images.xyang.xin/2020%2F09%2F03%2Fclassic-five-layer-model.jpg?x-oss-process=style/title_800&quot; alt=&quot;classic-five-layer-model.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="http" scheme="http://blog.xyang.xin/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>position ——【每天一点 CSS】</title>
    <link href="http://blog.xyang.xin/css-everday-1/"/>
    <id>http://blog.xyang.xin/css-everday-1/</id>
    <published>2020-08-31T15:15:31.000Z</published>
    <updated>2021-08-22T09:12:44.983Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天来聊聊关于CSS的属性&lt;code&gt;position&lt;/code&gt;，它的取值如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;position: static;   // 初始值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;position: relative; // 相对定位&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;position: absolute; // 绝对定位&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;position: fixed;    // 固定定位&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;定位不是继承的。&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="CSS" scheme="http://blog.xyang.xin/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>类型的动态绑定和静态绑定</title>
    <link href="http://blog.xyang.xin/dynamic&amp;static-type-binding/"/>
    <id>http://blog.xyang.xin/dynamic&amp;static-type-binding/</id>
    <published>2020-08-14T18:12:41.000Z</published>
    <updated>2021-08-22T09:12:47.444Z</updated>
    
    
    <summary type="html">&lt;p&gt;JavaScript 是动态绑定的语言，而 TypeScript 包装其成为静态绑定的语言。而什么是动态绑定，什么是静态绑定，它们的优劣又是什么呢？TypeScript 又为什么要“多此一举”？&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="TypeScript" scheme="http://blog.xyang.xin/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>学习 CSS 时忽视的几个知识点</title>
    <link href="http://blog.xyang.xin/note-hings-i-wish-id-known-about-css/"/>
    <id>http://blog.xyang.xin/note-hings-i-wish-id-known-about-css/</id>
    <published>2020-07-24T11:09:19.000Z</published>
    <updated>2021-08-22T09:12:50.186Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://cssfordesigners.com/articles/things-i-wish-id-known-about-css&quot;&gt;Things I Wish I’d Known About CSS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文章的作者以老式的方式构建网站：查看网站源代码、复制然后修改，而没有经过阅读书籍等系统性的学习。作者在 1999 年就使用这种方式了，当时写的还是这种代码： &lt;code&gt;&amp;lt;font size=&amp;quot;4&amp;quot; color=&amp;quot;#000000&amp;quot;&amp;gt;&lt;/code&gt;。而当 CSS 面世的时候，作者没有改变自己的学习方法，而错过了太多基本知识。文章主要介绍的是作者希望早点学到的东西。&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="css" scheme="http://blog.xyang.xin/tags/css/"/>
    
    <category term="note" scheme="http://blog.xyang.xin/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>从 Github 下载目标仓库指定文件夹</title>
    <link href="http://blog.xyang.xin/github-download-folder/"/>
    <id>http://blog.xyang.xin/github-download-folder/</id>
    <published>2020-07-09T21:19:34.000Z</published>
    <updated>2021-08-22T09:12:52.843Z</updated>
    
    
    <summary type="html">&lt;p&gt;从 Github 下载目标仓库指定文件夹。&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Github" scheme="http://blog.xyang.xin/tags/Github/"/>
    
    <category term="git-svn" scheme="http://blog.xyang.xin/tags/git-svn/"/>
    
  </entry>
  
  <entry>
    <title>vim-fugitive ——【一天一个 vim 插件】</title>
    <link href="http://blog.xyang.xin/vim-plugin-everday-2/"/>
    <id>http://blog.xyang.xin/vim-plugin-everday-2/</id>
    <published>2020-06-29T12:01:14.000Z</published>
    <updated>2021-08-22T09:13:02.359Z</updated>
    
    
    <summary type="html">&lt;p&gt;作为一个 10k+ star 的 vim 插件，&lt;a href=&quot;https://github.com/tpope/vim-fugitive&quot;&gt;tpope/vim-fugitive&lt;/a&gt; 自称为 Git 的第一 Vim 插件并不为过。Fugitive 让你在当前 buffer 缓冲区通过&lt;code&gt;:Git&lt;/code&gt;或&lt;code&gt;:G&lt;/code&gt;，可以直接使用 git 命令。可以看作是&lt;code&gt;!git XX&lt;/code&gt; 命令的改进和优化，除了使用 silent，静默模式外，你不会看到 “Press ENTER or type command to continue”，还对一些命令进行了优化。&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vim" scheme="http://blog.xyang.xin/tags/vim/"/>
    
    <category term="一天一个 vim 插件" scheme="http://blog.xyang.xin/tags/%E4%B8%80%E5%A4%A9%E4%B8%80%E4%B8%AA-vim-%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>vim-gitgutter ——【一天一个 vim 插件】</title>
    <link href="http://blog.xyang.xin/vim-plugin-everday-1/"/>
    <id>http://blog.xyang.xin/vim-plugin-everday-1/</id>
    <published>2020-06-28T12:03:02.000Z</published>
    <updated>2021-08-22T09:15:24.750Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;https://images.xyang.xin/2020%2F06%2F28%2Fscreenshot.png?x-oss-process=style/title_800&quot; alt=&quot;screenshot.png&quot;&gt;&lt;br&gt;在此截图你可以看见：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;183-184 行是新建的；&lt;/li&gt;
&lt;li&gt;186-187 行有所变动；&lt;/li&gt;
&lt;li&gt;在底部的预览区中显示改动情况（&lt;leader&gt;hp）。&lt;br&gt;(&lt;a href=&quot;https://github.com/airblade/vim-gitgutter&quot;&gt;出处&lt;/a&gt;)&lt;br&gt;&lt;a href=&quot;https://github.com/airblade/vim-gitgutter&quot;&gt;airblade/vim-gitgutter&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 vim 标志栏（sign column，行号左边的一列，通常为隐藏状态）中显示 git diff（git 差异）&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vim" scheme="http://blog.xyang.xin/tags/vim/"/>
    
    <category term="一天一个 vim 插件" scheme="http://blog.xyang.xin/tags/%E4%B8%80%E5%A4%A9%E4%B8%80%E4%B8%AA-vim-%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Vim8 操作简记</title>
    <link href="http://blog.xyang.xin/vim-manipulate/"/>
    <id>http://blog.xyang.xin/vim-manipulate/</id>
    <published>2020-06-23T13:50:03.000Z</published>
    <updated>2021-08-22T09:13:15.496Z</updated>
    
    
    <summary type="html">&lt;p&gt;Normal 模式是 Vim 默认打开状态。我们可以通过 Normal 模式，任何其它模式，我们可以在 Normal 模式下对文本进行浏览、排版、修改。Normal 模式在 Vim 中具有举足轻重的作用。&lt;/p&gt;
&lt;p&gt;在 Normal 模式下，除了基本的移动指令 (j、k、h、l)、插入指令 (i、a)、撤销指令 (u、U) 等。Vim 通过 “操作符 + 运作命令 = 操作”（出自《Vim 实用技巧 第 2 版》） 扩展出了大量的操作指令。&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Vim" scheme="http://blog.xyang.xin/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Linux 剪贴板小技巧</title>
    <link href="http://blog.xyang.xin/ssh-clipboard-iterm2/"/>
    <id>http://blog.xyang.xin/ssh-clipboard-iterm2/</id>
    <published>2020-05-30T22:07:30.000Z</published>
    <updated>2021-08-22T09:13:19.121Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;初步识-vim-剪贴板&quot;&gt;&lt;a href=&quot;#初步识-vim-剪贴板&quot; class=&quot;headerlink&quot; title=&quot;初步识 vim 剪贴板&quot;&gt;&lt;/a&gt;初步识 vim 剪贴板&lt;/h2&gt;&lt;p&gt;对于文本的复制粘贴，系统会提供剪贴板，剪贴板在 vim 中被称为寄存器，并且 vim 有很多寄存器，寄存器使用的语法：&lt;code&gt;&amp;quot;&amp;#123;register&amp;#125;&lt;/code&gt;，当然了寄存器指令不会单独使用，后面都会跟代表复制的 &lt;code&gt;y&lt;/code&gt; 或代表粘贴的 &lt;code&gt;p&lt;/code&gt;，执行 &lt;code&gt;&amp;quot;ay&lt;/code&gt; 就将选中的内容复制到了 &lt;code&gt;a&lt;/code&gt; 寄存器，</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Linux" scheme="http://blog.xyang.xin/tags/Linux/"/>
    
    <category term="剪贴板" scheme="http://blog.xyang.xin/tags/%E5%89%AA%E8%B4%B4%E6%9D%BF/"/>
    
    <category term="Vim" scheme="http://blog.xyang.xin/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>搜索引擎使用技巧</title>
    <link href="http://blog.xyang.xin/se-operators/"/>
    <id>http://blog.xyang.xin/se-operators/</id>
    <published>2020-05-29T18:15:01.000Z</published>
    <updated>2021-08-22T09:13:22.146Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;http://images.xyang.xin/2020%2F05%2F29%2F1590724982.png?x-oss-process=style/title_800&quot; alt=&quot;1590724982.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;生活离不开搜索引擎了，我曾尝试在思考，是不是未来的开卷考试，会允许使用某个特定的搜索引擎。</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="SE" scheme="http://blog.xyang.xin/tags/SE/"/>
    
    <category term="搜索引擎" scheme="http://blog.xyang.xin/tags/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
    <category term="Google" scheme="http://blog.xyang.xin/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>Mac 小问题 —— iCloud 未响应</title>
    <link href="http://blog.xyang.xin/macos-problems/"/>
    <id>http://blog.xyang.xin/macos-problems/</id>
    <published>2020-04-18T16:15:08.000Z</published>
    <updated>2021-08-22T09:13:24.946Z</updated>
    
    
    <summary type="html">&lt;p&gt;使用 iCloud Drive 将文件上传到云端，防止数据丢失，同时可以实现多台设备的协同工作。但是在使用 iCloud Drive 的过程中我遇到了程序未响应，iCoud 文件上传阻塞的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="MacOS" scheme="http://blog.xyang.xin/tags/MacOS/"/>
    
    <category term="Finder" scheme="http://blog.xyang.xin/tags/Finder/"/>
    
    <category term="iCloud" scheme="http://blog.xyang.xin/tags/iCloud/"/>
    
  </entry>
  
  <entry>
    <title>Mac 大扫除🧹</title>
    <link href="http://blog.xyang.xin/macos-clean/"/>
    <id>http://blog.xyang.xin/macos-clean/</id>
    <published>2020-04-13T14:07:22.000Z</published>
    <updated>2021-08-22T09:13:28.313Z</updated>
    
    
    <summary type="html">&lt;p&gt;基于 macOS Catalina 版本 10.15.4, 128G固态，8GB内存。&lt;/p&gt;
&lt;p&gt;通过以下命令可以查看当前路径下的所有文件及文件夹大小并从大到小排列，以 KB 为单位显示。&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;du -sk *| sort -rn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以下命令就是以K，M，G为单位，提高信息的可读性，但是不能正确按文件大小排序。&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;du -sh *&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="MacOS" scheme="http://blog.xyang.xin/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>解构赋值 ———【一天一个 es6 语法】</title>
    <link href="http://blog.xyang.xin/es6-everyday-3/"/>
    <id>http://blog.xyang.xin/es6-everyday-3/</id>
    <published>2020-03-31T15:51:49.000Z</published>
    <updated>2021-08-22T09:13:31.366Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;何为解构赋值&quot;&gt;&lt;a href=&quot;#何为解构赋值&quot; class=&quot;headerlink&quot; title=&quot;何为解构赋值&quot;&gt;&lt;/a&gt;何为解构赋值&lt;/h2&gt;&lt;p&gt;解构赋值语法是一种 javascript 表达式。通过解构赋值，可以将属性/值从对象/数组中取出，复制给其他变量。&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="【一天一个 es6 语法】" scheme="http://blog.xyang.xin/tags/%E3%80%90%E4%B8%80%E5%A4%A9%E4%B8%80%E4%B8%AA-es6-%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    <category term="javascript" scheme="http://blog.xyang.xin/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>箭头函数( =&gt; ） ———【一天一个 es6 语法】</title>
    <link href="http://blog.xyang.xin/es6-everday-2/"/>
    <id>http://blog.xyang.xin/es6-everday-2/</id>
    <published>2020-03-29T19:13:56.000Z</published>
    <updated>2021-08-22T09:13:35.055Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Function&quot;&gt;&lt;a href=&quot;#Function&quot; class=&quot;headerlink&quot; title=&quot;Function&quot;&gt;&lt;/a&gt;Function&lt;/h2&gt;&lt;p&gt;每个函数都是 &lt;code&gt;Function&lt;/code&gt; 类型的实例，由于函数是对象，因此函数名实际上也是一个指向函数对象的指针，函数通常是使用&lt;strong&gt;函数声明语法&lt;/strong&gt;定义的：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;num1, num2&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; num1 + num2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="【一天一个 es6 语法】" scheme="http://blog.xyang.xin/tags/%E3%80%90%E4%B8%80%E5%A4%A9%E4%B8%80%E4%B8%AA-es6-%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    <category term="javascript" scheme="http://blog.xyang.xin/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Symbol ———【一天一个 es6 语法】</title>
    <link href="http://blog.xyang.xin/es6-everday-1/"/>
    <id>http://blog.xyang.xin/es6-everday-1/</id>
    <published>2020-03-25T21:28:59.000Z</published>
    <updated>2021-08-22T09:13:38.445Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是-Symbol&quot;&gt;&lt;a href=&quot;#什么是-Symbol&quot; class=&quot;headerlink&quot; title=&quot;什么是 Symbol?&quot;&gt;&lt;/a&gt;什么是 Symbol?&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; 😻 = 😺 × 😍;  &lt;span class=&quot;comment&quot;&gt;// SyntaxError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（爆笑）这当然不是 Symbol。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Undefined&lt;/li&gt;
&lt;li&gt;Null&lt;/li&gt;
&lt;li&gt;Boolean&lt;/li&gt;
&lt;li&gt;Number&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Object&lt;/li&gt;
&lt;li&gt;Symbol (ES2015 新增)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Symbol 不是字符串，不是对象，是第七种原始数据类型。每个从&lt;code&gt;Symbol()&lt;/code&gt;返回的 symbol 类型的值都是唯一的。&lt;strong&gt;一个 symbol 类型的值能作为对象属性的标识符；这是该数据类型仅有的目的&lt;/strong&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="【一天一个 es6 语法】" scheme="http://blog.xyang.xin/tags/%E3%80%90%E4%B8%80%E5%A4%A9%E4%B8%80%E4%B8%AA-es6-%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    <category term="javascript" scheme="http://blog.xyang.xin/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>vim 多文件类型自动补全方案</title>
    <link href="http://blog.xyang.xin/vim-multiple-filetype-deoplete/"/>
    <id>http://blog.xyang.xin/vim-multiple-filetype-deoplete/</id>
    <published>2020-03-17T15:27:51.000Z</published>
    <updated>2021-08-22T09:13:41.101Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;多文件类型也可以叫混合文件类型(multiple filetype), 比如 HTML 里面写 CSS, JS 代码，虽然不提倡，但偶尔也有这个需求。&lt;/p&gt;
&lt;p&gt;根据常识，我们知道，往往针对不同的文本类型，vim 或其插件，会出发不同的事件，例如特定的语法高亮、特定的语法检测、特定的自动补全方案等。&lt;br&gt;几乎每个 vim user 的 vimrc 中都会有如下配置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;filetype plugin indent on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vim" scheme="http://blog.xyang.xin/tags/vim/"/>
    
    <category term="multiple filetype" scheme="http://blog.xyang.xin/tags/multiple-filetype/"/>
    
  </entry>
  
  <entry>
    <title>HTTP 代理与 Socks5 代理</title>
    <link href="http://blog.xyang.xin/proxy-http-socks5/"/>
    <id>http://blog.xyang.xin/proxy-http-socks5/</id>
    <published>2020-03-15T13:06:07.000Z</published>
    <updated>2021-08-22T09:13:44.185Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;本文通过实践经历基本的认识 HTTP 代理与 Socks5 代理的用法与理解其精髓。同时也解决 go get 库无法下载的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="信息技术" scheme="http://blog.xyang.xin/categories/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="代理" scheme="http://blog.xyang.xin/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>《如何阅读一本书》读书笔记</title>
    <link href="http://blog.xyang.xin/book-rhydybs/"/>
    <id>http://blog.xyang.xin/book-rhydybs/</id>
    <published>2019-09-01T19:36:24.000Z</published>
    <updated>2021-08-22T09:46:59.573Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;http://images.xyang.xin/2019-09%2Frhydybs.jpeg?x-oss-process=style/title_140&quot; alt=&quot;rhydybs.jpeg-w140&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="思想文化" scheme="http://blog.xyang.xin/categories/%E6%80%9D%E6%83%B3%E6%96%87%E5%8C%96/"/>
    
    
    <category term="读书笔记" scheme="http://blog.xyang.xin/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    <category term="阅读" scheme="http://blog.xyang.xin/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
</feed>
